# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Setting.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_Setting(object):
    def setupUi(self, Setting):
        Setting.setObjectName("Setting")
        Setting.resize(240, 131)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(Setting.sizePolicy().hasHeightForWidth())
        Setting.setSizePolicy(sizePolicy)
        Setting.setMinimumSize(QtCore.QSize(240, 131))
        Setting.setMaximumSize(QtCore.QSize(240, 131))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("Лого.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        Setting.setWindowIcon(icon)
        Setting.setStyleSheet("/* Стиль градиента для фона */\n"
"background: qradialgradient(cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5, radius: 1.5, stop: 0 rgba(173, 216, 230, 255), stop: 1 rgba(144, 202, 249, 255));\n"
"\n"
"/* Стиль текста */\n"
"color: #333; /* Темный цвет текста для лучшей читаемости на светлом фоне */\n"
"")
        self.theme_combobox = QtWidgets.QComboBox(Setting)
        self.theme_combobox.setGeometry(QtCore.QRect(20, 70, 125, 31))
        self.theme_combobox.setMinimumSize(QtCore.QSize(125, 31))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(10)
        font.setItalic(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.theme_combobox.setFont(font)
        self.theme_combobox.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.theme_combobox.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.theme_combobox.setAutoFillBackground(False)
        self.theme_combobox.setStyleSheet("/* Стиль QComboBox */\n"
"QComboBox {\n"
"    border: 1px solid #ccc; /* Граничная линия */\n"
"    border-radius: 5px; /* Скругление углов */\n"
"    padding: 5px; /* Отступ внутри ComboBox */\n"
"    /* Цвета для светлой темы */\n"
"    background: qradialgradient(cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5, radius: 1.5,         stop: 0 rgba(173, 216, 230, 255), stop: 1 rgba(144, 202, 249, 255));\n"
"    selection-background-color: #B0E57C; /* Цвет выделения */\n"
"}\n"
"\n"
"/* Стиль QComboBox в раскрытом состоянии */\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    border-radius: 5px; /* Скругление углов */\n"
"    width: 25px; /* Ширина кнопки раскрытия списка */\n"
"    border-left-width: 1px; /* Ширина граничной линии слева от кнопки */\n"
"    border-left-color: #ccc; /* Цвет граничной линии */\n"
"    border-left-style: solid;\n"
"}\n"
"\n"
"/* Стиль элементов в раскрывающемся списке (выбранный элемент) */\n"
"QComboBox QAbstractItemView {\n"
"    border: 1px solid #ccc; /* Граничная линия для элементов в списке */\n"
"    border-radius: 5px; /* Скругление углов элементов в списке */\n"
"}\n"
"\n"
"/* Стиль выбранного элемента в раскрывающемся списке */\n"
"QComboBox QAbstractItemView::item {\n"
"    /* Цвета для светлой темы */\n"
"    background: #fff;\n"
"}\n"
"")
        self.theme_combobox.setInputMethodHints(QtCore.Qt.ImhNone)
        self.theme_combobox.setEditable(False)
        self.theme_combobox.setCurrentText("Темная")
        self.theme_combobox.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToContents)
        self.theme_combobox.setObjectName("theme_combobox")
        self.theme_combobox.addItem("")
        self.theme_combobox.setItemText(0, "Светлая")
        self.theme_combobox.addItem("")
        self.theme_combobox.setItemText(1, "Темная")
        self.label_4 = QtWidgets.QLabel(Setting)
        self.label_4.setGeometry(QtCore.QRect(161, 70, 52, 31))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(10)
        font.setItalic(False)
        self.label_4.setFont(font)
        self.label_4.setObjectName("label_4")
        self.Language_Box = QtWidgets.QComboBox(Setting)
        self.Language_Box.setGeometry(QtCore.QRect(20, 30, 125, 31))
        self.Language_Box.setMinimumSize(QtCore.QSize(125, 31))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(10)
        font.setItalic(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.Language_Box.setFont(font)
        self.Language_Box.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.Language_Box.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.Language_Box.setStyleSheet("/* Стиль QComboBox */\n"
"QComboBox {\n"
"    border: 1px solid #ccc; /* Граничная линия */\n"
"    border-radius: 5px; /* Скругление углов */\n"
"    padding: 5px; /* Отступ внутри ComboBox */\n"
"    /* Цвета для светлой темы */\n"
"    background: qradialgradient(cx: 0.5, cy: 0.5, fx: 0.5, fy: 0.5, radius: 1.5,         stop: 0 rgba(173, 216, 230, 255), stop: 1 rgba(144, 202, 249, 255));\n"
"    selection-background-color: #B0E57C; /* Цвет выделения */\n"
"}\n"
"\n"
"/* Стиль QComboBox в раскрытом состоянии */\n"
"QComboBox::drop-down {\n"
"    subcontrol-origin: padding;\n"
"    subcontrol-position: top right;\n"
"    border-radius: 5px; /* Скругление углов */\n"
"    width: 25px; /* Ширина кнопки раскрытия списка */\n"
"    border-left-width: 1px; /* Ширина граничной линии слева от кнопки */\n"
"    border-left-color: #ccc; /* Цвет граничной линии */\n"
"    border-left-style: solid;\n"
"}\n"
"\n"
"/* Стиль элементов в раскрывающемся списке (выбранный элемент) */\n"
"QComboBox QAbstractItemView {\n"
"    border: 1px solid #ccc; /* Граничная линия для элементов в списке */\n"
"    border-radius: 5px; /* Скругление углов элементов в списке */\n"
"}\n"
"\n"
"/* Стиль выбранного элемента в раскрывающемся списке */\n"
"QComboBox QAbstractItemView::item {\n"
"    /* Цвета для светлой темы */\n"
"    background: #fff;\n"
"}\n"
"")
        self.Language_Box.setInputMethodHints(QtCore.Qt.ImhNone)
        self.Language_Box.setObjectName("Language_Box")
        self.Language_Box.addItem("")
        self.Language_Box.addItem("")
        self.label_3 = QtWidgets.QLabel(Setting)
        self.label_3.setGeometry(QtCore.QRect(160, 30, 53, 31))
        font = QtGui.QFont()
        font.setFamily("Georgia")
        font.setPointSize(10)
        font.setItalic(False)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")

        self.retranslateUi(Setting)
        self.theme_combobox.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(Setting)

    def retranslateUi(self, Setting):
        _translate = QtCore.QCoreApplication.translate
        Setting.setWindowTitle(_translate("Setting", "Настройки"))
        self.theme_combobox.setAccessibleName(_translate("Setting", "<html><head/><body><p>гнепш</p><p><br/></p></body></html>"))
        self.label_4.setText(_translate("Setting", "Тема"))
        self.Language_Box.setItemText(0, _translate("Setting", "Руский"))
        self.Language_Box.setItemText(1, _translate("Setting", "Английский"))
        self.label_3.setText(_translate("Setting", "Язык"))
